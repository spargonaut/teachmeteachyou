import org.spargonaut.gradleApp.StartBackgroundApp
import org.spargonaut.gradleApp.StopBackgroundApp

plugins {
    id 'groovy'
    id 'com.github.johnrengelman.shadow' version '1.2.2'
    id 'org.flywaydb.flyway' version '3.2'
    id 'codenarc'
    id 'idea'
}

repositories {
    mavenCentral()
}

shadowJar {
    archiveName = 'LOTApplication.jar'
}

ext {
    dropwizardVersion = '0.9.1'
    background = [:]
}

flyway {
    url = 'jdbc:postgresql://localhost:5432/cognitiveConnections'
    user = 'postgres'
    password = ''
    schemas = ['public']
    baselineOnMigrate = true
}

sourceSets {
    integrationTest {
        groovy {
            srcDir 'src/integrationTest/groovy'
        }
    }

    functionalTest {
        groovy {
            srcDir 'src/functionalTest/groovy'
        }
    }
}

codenarc {
    configFile file("${projectDir}/codenarc.groovy")
}

dependencies {
    compile 'org.codehaus.groovy:groovy-all:2.4.5'
    compile "io.dropwizard:dropwizard-core:${dropwizardVersion}"
    compile "io.dropwizard:dropwizard-assets:${dropwizardVersion}"
    compile "io.dropwizard:dropwizard-jdbi:${dropwizardVersion}"
    compile 'org.postgresql:postgresql:9.4-1204-jdbc42'
    compile 'com.google.inject:guice:4.0'
    // FIXME - the next line (compile dep for selenium) is only needed to make intelliJ quit bitching.  find out why
    compile 'org.seleniumhq.selenium:selenium-java:2.49.1'

    testCompile 'org.spockframework:spock-core:1.0-groovy-2.4'
    testCompile 'org.springframework.boot:spring-boot:1.3.1.RELEASE'

    integrationTestCompile sourceSets.main.output
    integrationTestCompile configurations.testCompile
    integrationTestCompile sourceSets.test.output
    integrationTestRuntime configurations.testRuntime

    functionalTestCompile sourceSets.main.output
    functionalTestCompile configurations.testCompile
    functionalTestCompile 'org.seleniumhq.selenium:selenium-java:2.49.1'
}

task runLocal(dependsOn: jar, type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'org.spargonaut.LOTApplication'
    args 'server', 'LOTConfiguration.yml'
}

task startBackgroundApp(type: StartBackgroundApp) {
    dependsOn 'flywayMigrate'
}

task stopBackgroundApp(type: StopBackgroundApp) {
}

task integrationTest(type: Test, dependsOn: build) {
    description 'Runs the integration tests'
    testClassesDir = sourceSets.integrationTest.output.classesDir
    classpath = sourceSets.integrationTest.runtimeClasspath
}

task functionalTest(type: Test) {
    description 'Runs the functional tests'
    dependsOn 'startBackgroundApp'
    finalizedBy stopBackgroundApp
    testClassesDir = sourceSets.functionalTest.output.classesDir
    classpath = sourceSets.functionalTest.runtimeClasspath
}

task cleanUI(type: Delete) {
    outputs.upToDateWhen { false }
    delete 'application/src/main/resources/assets/ui'
}

task grunt(type: Exec) {
    outputs.upToDateWhen { false }
    workingDir 'src/UI'
    commandLine 'grunt'
}

task deployUI(type: Copy) {
    outputs.upToDateWhen { false }
    dependsOn 'cleanUI'
    dependsOn 'grunt'
    from 'src/UI/dist'
    into 'src/main/resources/assets/ui'
}

idea {
    module {
        testSourceDirs += sourceSets.integrationTest.groovy.srcDirs
        testSourceDirs += sourceSets.functionalTest.groovy.srcDirs

        excludeDirs += file 'gradle'
        excludeDirs += file 'src/UI/dist'
        excludeDirs += file 'src/UI/node_modules'
    }
}
